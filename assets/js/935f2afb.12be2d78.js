"use strict";(self.webpackChunkcryptography=self.webpackChunkcryptography||[]).push([[53],{1109:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/cryptography/docs/intro","docId":"intro"},{"type":"category","label":"Primitives","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Hash Function","href":"/cryptography/docs/primitives/hash-function","docId":"primitives/hash-function"},{"type":"link","label":"Message Athentication Code (MAC)","href":"/cryptography/docs/primitives/mac","docId":"primitives/mac"},{"type":"link","label":"Authentication Encryption","href":"/cryptography/docs/primitives/authenticated-encryption","docId":"primitives/authenticated-encryption"},{"type":"link","label":"Key Exchange","href":"/cryptography/docs/primitives/key-exchange","docId":"primitives/key-exchange"},{"type":"link","label":"Asymmetric Encryption","href":"/cryptography/docs/primitives/asymmetric-encryption","docId":"primitives/asymmetric-encryption"},{"type":"link","label":"Signature","href":"/cryptography/docs/primitives/signature","docId":"primitives/signature"},{"type":"link","label":"Randomness","href":"/cryptography/docs/primitives/randomness","docId":"primitives/randomness"}],"href":"/cryptography/docs/category/primitives"}]},"docs":{"intro":{"id":"intro","title":"Introduction","description":"","sidebar":"tutorialSidebar"},"primitives/asymmetric-encryption":{"id":"primitives/asymmetric-encryption","title":"Asymmetric Encryption","description":"","sidebar":"tutorialSidebar"},"primitives/authenticated-encryption":{"id":"primitives/authenticated-encryption","title":"Authentication Encryption","description":"","sidebar":"tutorialSidebar"},"primitives/hash-function":{"id":"primitives/hash-function","title":"Hash Function","description":"A hash function is any function that can be used to map data of arbitrary size to fixed-size values, though there are some hash functions that support variable length output.","sidebar":"tutorialSidebar"},"primitives/key-exchange":{"id":"primitives/key-exchange","title":"Key Exchange","description":"","sidebar":"tutorialSidebar"},"primitives/mac":{"id":"primitives/mac","title":"Message Athentication Code (MAC)","description":"","sidebar":"tutorialSidebar"},"primitives/randomness":{"id":"primitives/randomness","title":"Randomness","description":"","sidebar":"tutorialSidebar"},"primitives/signature":{"id":"primitives/signature","title":"Signature","description":"","sidebar":"tutorialSidebar"}}}')}}]);